{
    "meta:license": [
        " Copyright (c) 2012-2019 Red Hat, Inc.",
        " This program and the accompanying materials are made",
        " available under the terms of the Eclipse Public License 2.0",
        " which is available at https://www.eclipse.org/legal/epl-2.0/",
        " SPDX-License-Identifier: EPL-2.0",
        " Contributors:",
        " Red Hat, Inc. - initial API and implementation"
    ],
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "Devfile object",
    "description": "This schema describes the structure of the devfile object",
    "definitions": {
        "attributes": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "javaType": "java.util.Map<String, String>"
        },
        "selector": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "javaType": "java.util.Map<String, String>"
        }
    },
    "required": [
        "specVersion",
        "name",
        "tools"
    ],
    "additionalProperties": false,
    "properties": {
        "specVersion": {
            "type": "string",
            "title": "Devfile Specification Version",
            "examples": [
                "0.0.1"
            ]
        },
        "name": {
            "type": "string",
            "title": "Devfile Name",
            "description": "The name of the devfile. Workspaces created from devfile, will inherit this name",
            "examples": [
                "petclinic-dev-environment"
            ]
        },
        "projects": {
            "type": "array",
            "title": "The Projects List",
            "description": "Description of the projects, containing names and sources locations",
            "items": {
                "type": "object",
                "required": [
                    "name",
                    "source"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "The Project Name",
                        "examples": [
                            "petclinic"
                        ]
                    },
                    "source": {
                        "type": "object",
                        "title": "The Project Source object",
                        "description": "Describes the project's source - type and location",
                        "required": [
                            "type",
                            "location"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Project's source type.",
                                "examples": [
                                    "git",
                                    "github",
                                    "zip"
                                ]
                            },
                            "location": {
                                "type": "string",
                                "description": "Project's source location address. Should be URL for git and github located projects, or file:// for zip.",
                                "examples": [
                                    "git@github.com:spring-projects/spring-petclinic.git"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "tools": {
            "type": "array",
            "title": "The Tools List",
            "description": "Description of the workspace tools, such as editor and plugins",
            "items": {
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "additionalProperties": false,
                "oneOf": [
                    {
                        "properties": {
                            "type": {
                                "enum": [
                                    "cheEditor",
                                    "chePlugin"
                                ]
                            }
                        },
                        "required": [
                            "id"
                        ]
                    },
                    {
                        "properties": {
                            "type": {
                                "enum": [
                                    "kubernetes",
                                    "openshift"
                                ]
                            }
                        },
                        "required": [
                            "local"
                        ]
                    },
                    {
                        "properties": {
                            "type": {
                                "enum": [
                                    "dockerimage"
                                ]
                            }
                        },
                        "required": [
                            "image",
                            "memoryLimit"
                        ]
                    }
                ],
                "properties": {
                    "name": {
                        "description": "Describes the name of the tool. Should be unique per tool set.",
                        "type": "string",
                        "examples": [
                            "mvn-stack"
                        ]
                    },
                    "type": {
                        "description": "Describes type of the tool, e.g. whether it is an plugin or editor or other type",
                        "type": "string",
                        "examples": [
                            "chePlugin",
                            "cheEditor",
                            "kubernetes",
                            "openshift",
                            "dockerimage"
                        ]
                    },
                    "id": {
                        "type": "string",
                        "description": "Describes the tool FQN",
                        "examples": [
                            "eclipse/maven-jdk8:1.0.0"
                        ]
                    },
                    "local": {
                        "description": "Describes location of Kubernetes list yaml file. Applicable only for 'kubernetes' and 'openshift' type tools",
                        "type": "string",
                        "examples": [
                            "petclinic-app.yaml"
                        ]
                    },
                    "selector": {
                        "$ref": "#/definitions/selector",
                        "description": "Describes the objects selector for the recipe type tools. Allows to pick-up only selected items from k8s/openshift list",
                        "examples": [
                            "{\n   \"app.kubernetes.io/name\" : \"mysql\", \n   \"app.kubernetes.io/component\" : \"database\", \n   \"app.kubernetes.io/part-of\" : \"petclinic\" \n}"
                        ]
                    },
                    "image": {
                        "type": "string",
                        "description": "Specifies the docker image that should be used for tool",
                        "examples": [
                            "eclipse/maven-jdk8:1.0.0"
                        ]
                    },
                    "memoryLimit": {
                        "type": "string",
                        "description": "Describes memory limit for the tool. You can express memory as a plain integer or as a fixed-point integer using one of these suffixes: E, P, T, G, M, K. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki",
                        "examples": [
                            "128974848",
                            "129e6",
                            "129M",
                            "123Mi"
                        ]
                    },
                    "mountSources": {
                        "type": "boolean",
                        "description": "Describes whether projects sources should be mount to the tool. `CHE_PROJECTS_ROOT` environment variable should contains a path where projects sources are mount",
                        "default": "false"
                    },
                    "volumes": {
                        "type": "array",
                        "description": "Describes volumes which should be mount to tool",
                        "items": {
                            "type": "object",
                            "description": "Describe volume that should be mount to tool",
                            "required": [
                                "name",
                                "containerPath"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "The Volume Name",
                                    "description": "The volume name. If several tools mount the same volume then they will reuse the volume and will be able to access to the same files",
                                    "examples": [
                                        "my-data"
                                    ]
                                },
                                "containerPath": {
                                    "type": "string",
                                    "title": "The path where volume should be mount to container",
                                    "examples": [
                                        "/home/user/data"
                                    ]
                                }
                            }
                        }
                    },
                    "env": {
                        "type": "array",
                        "description": "The environment variables list that should be set to docker container",
                        "items": {
                            "type": "object",
                            "description": "Describes environment variable",
                            "required": [
                                "name",
                                "value"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "The Environment Variable Name",
                                    "description": "The environment variable name"
                                },
                                "value": {
                                    "type": "string",
                                    "title": "The Environment Variable Value",
                                    "description": "The environment variable value"
                                }
                            }
                        }
                    },
                    "endpoints": {
                        "type": "array",
                        "description": "Describes dockerimage tool endpoints",
                        "items": {
                            "name": "object",
                            "description": "Describes dockerimage tool endpoint",
                            "required": [
                                "name",
                                "port"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "title": "The Environment Variable Name",
                                    "description": "The environment variable name"
                                },
                                "port": {
                                    "type": "integer",
                                    "title": "The Environment Variable Name",
                                    "description": "The environment variable name"
                                },
                                "attributes": {
                                    "type": "object",
                                    "public": {
                                        "type": "boolean",
                                        "description": "Identifies endpoint as workspace internally or externally accessible.",
                                        "default": "true"
                                    },
                                    "secure": {
                                        "type": "boolean",
                                        "description": "Identifies server as secure or non-secure. Requests to secure servers will be authenticated and must contain machine token",
                                        "default": "false"
                                    },
                                    "discoverable": {
                                        "type": "boolean",
                                        "description": "Identifies endpoint as accessible by its name.",
                                        "default": "false"
                                    },
                                    "protocol": {
                                        "type": "boolean",
                                        "description": "Defines protocol that should be used for communication with endpoint. Is used for endpoint URL evaluation"
                                    },
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "javaType": "java.util.Map<String, String>"
                                }
                            }
                        }
                    }
                }
            }
        },
        "commands": {
            "type": "array",
            "title": "The Commands List",
            "description": "Description of the predefined commands to be available in workspace",
            "items": {
                "type": "object",
                "required": [
                    "name",
                    "actions"
                ],
                "properties": {
                    "name": {
                        "description": "Describes the name of the command. Should be unique per commands set.",
                        "type": "string",
                        "examples": [
                            "build"
                        ]
                    },
                    "attributes": {
                        "description": "Additional command attributes",
                        "$ref": "#/definitions/attributes"
                    },
                    "actions": {
                        "type": "array",
                        "description": "List of the actions of given command. Now the only one command must be specified in list but there are plans to implement supporting multiple actions commands.",
                        "title": "The Command Actions List",
                        "minItems": 1,
                        "maxItems": 1,
                        "items": {
                            "type": "object",
                            "required": [
                                "type",
                                "tool",
                                "command"
                            ],
                            "properties": {
                                "type": {
                                    "description": "Describes action type",
                                    "type": "string",
                                    "examples": [
                                        "exec"
                                    ]
                                },
                                "tool": {
                                    "type": "string",
                                    "description": "Describes tool to which given action relates",
                                    "examples": [
                                        "mvn-stack"
                                    ]
                                },
                                "command": {
                                    "type": "string",
                                    "description": "The actual action command-line string",
                                    "examples": [
                                        "mvn package"
                                    ]
                                },
                                "workdir": {
                                    "type": "string",
                                    "description": "Working directory where the command should be executed",
                                    "examples": [
                                        "/projects/spring-petclinic"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}